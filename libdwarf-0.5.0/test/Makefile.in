# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 2021 David Anderson
# This Makefile.am is hereby placed in the public domain
### Any error in thie file will lead to:
### error: Something went wrong bootstrapping makefile fragments
### for automatic dependency tracking
###Entering directory '/var/tmp/bld/src/lib/libdwarf'
###CC       libdwarf_la-dwarf_abbrev.lo
###/bin/bash: ../../../libtool: No such file or directory
### with no hint as to what the problem really is..
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = test_canonical$(EXEEXT) test_dwarflebtest$(EXEEXT) \
	test_dwarfstring$(EXEEXT) test_dwgetopt$(EXEEXT) \
	test_errmsglist$(EXEEXT) test_extra_flag_strings$(EXEEXT) \
	test_getnametest$(EXEEXT) test_helpertree$(EXEEXT) \
	test_linkedtopath$(EXEEXT) test_macrocheck$(EXEEXT) \
	test_makenametest$(EXEEXT) test_regex$(EXEEXT) \
	test_safestrcpy$(EXEEXT) test_sectionbitmaps$(EXEEXT) \
	test_testesb$(EXEEXT) test_sanitized$(EXEEXT) \
	test_tied$(EXEEXT) $(am__append_1) test_dwarfdumpLinux.sh \
	test_dwarfdumpPE.sh test_dwarfdumpMacos.sh $(am__append_2)
check_PROGRAMS = test_canonical$(EXEEXT) test_dwarflebtest$(EXEEXT) \
	test_dwarfstring$(EXEEXT) test_dwgetopt$(EXEEXT) \
	test_errmsglist$(EXEEXT) test_extra_flag_strings$(EXEEXT) \
	test_getnametest$(EXEEXT) test_helpertree$(EXEEXT) \
	test_linkedtopath$(EXEEXT) test_macrocheck$(EXEEXT) \
	test_makenametest$(EXEEXT) test_regex$(EXEEXT) \
	test_safestrcpy$(EXEEXT) test_sectionbitmaps$(EXEEXT) \
	test_testesb$(EXEEXT) test_sanitized$(EXEEXT) \
	test_tied$(EXEEXT)

### debuglink tests are difficult to support in Windows/mingw
@HAVE_DEBUGLINK_TRUE@@HAVE_DWARFEXAMPLE_TRUE@am__append_1 = test_debuglink-a.sh test_debuglink-b.sh
@HAVE_DWARFEXAMPLE_TRUE@am__append_2 = test_jitreaderdiff.sh
subdir = test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/dw_compiler.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__dirstamp = $(am__leading_dot)dirstamp
am_test_canonical_OBJECTS = test_canonical-test_canonical.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.$(OBJEXT)
test_canonical_OBJECTS = $(am_test_canonical_OBJECTS)
test_canonical_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
test_canonical_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_canonical_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_test_dwarflebtest_OBJECTS =  \
	test_dwarflebtest-test_dwarf_leb.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.$(OBJEXT)
test_dwarflebtest_OBJECTS = $(am_test_dwarflebtest_OBJECTS)
test_dwarflebtest_LDADD = $(LDADD)
test_dwarflebtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_dwarflebtest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_dwarfstring_OBJECTS =  \
	test_dwarfstring-test_dwarfstring.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.$(OBJEXT)
test_dwarfstring_OBJECTS = $(am_test_dwarfstring_OBJECTS)
test_dwarfstring_LDADD = $(LDADD)
test_dwarfstring_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_dwarfstring_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_dwgetopt_OBJECTS = test_dwgetopt-test_getopt.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.$(OBJEXT)
test_dwgetopt_OBJECTS = $(am_test_dwgetopt_OBJECTS)
test_dwgetopt_LDADD = $(LDADD)
test_dwgetopt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_dwgetopt_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_errmsglist_OBJECTS =  \
	test_errmsglist-test_errmsglist.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.$(OBJEXT)
test_errmsglist_OBJECTS = $(am_test_errmsglist_OBJECTS)
test_errmsglist_LDADD = $(LDADD)
test_errmsglist_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_errmsglist_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_extra_flag_strings_OBJECTS =  \
	test_extra_flag_strings-test_extra_flag_strings.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.$(OBJEXT)
test_extra_flag_strings_OBJECTS =  \
	$(am_test_extra_flag_strings_OBJECTS)
test_extra_flag_strings_LDADD = $(LDADD)
test_extra_flag_strings_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_extra_flag_strings_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_getnametest_OBJECTS = test_getnametest-test_getname.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.$(OBJEXT)
test_getnametest_OBJECTS = $(am_test_getnametest_OBJECTS)
test_getnametest_LDADD = $(LDADD)
test_getnametest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_getnametest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_helpertree_OBJECTS =  \
	test_helpertree-test_helpertree.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.$(OBJEXT)
test_helpertree_OBJECTS = $(am_test_helpertree_OBJECTS)
test_helpertree_LDADD = $(LDADD)
test_helpertree_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_helpertree_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_linkedtopath_OBJECTS =  \
	test_linkedtopath-test_linkedtopath.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.$(OBJEXT)
test_linkedtopath_OBJECTS = $(am_test_linkedtopath_OBJECTS)
test_linkedtopath_LDADD = $(LDADD)
test_linkedtopath_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_linkedtopath_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_macrocheck_OBJECTS =  \
	test_macrocheck-test_macrocheck.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.$(OBJEXT)
test_macrocheck_OBJECTS = $(am_test_macrocheck_OBJECTS)
test_macrocheck_LDADD = $(LDADD)
test_macrocheck_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_macrocheck_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_makenametest_OBJECTS =  \
	test_makenametest-test_makename.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.$(OBJEXT)
test_makenametest_OBJECTS = $(am_test_makenametest_OBJECTS)
test_makenametest_LDADD = $(LDADD)
test_makenametest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_makenametest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_regex_OBJECTS = test_regex-test_regex.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.$(OBJEXT)
test_regex_OBJECTS = $(am_test_regex_OBJECTS)
test_regex_LDADD = $(LDADD)
test_regex_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_regex_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_safestrcpy_OBJECTS =  \
	test_safestrcpy-test_safe_strcpy.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.$(OBJEXT)
test_safestrcpy_OBJECTS = $(am_test_safestrcpy_OBJECTS)
test_safestrcpy_LDADD = $(LDADD)
am_test_sanitized_OBJECTS = test_sanitized-test_sanitized.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.$(OBJEXT)
test_sanitized_OBJECTS = $(am_test_sanitized_OBJECTS)
test_sanitized_LDADD = $(LDADD)
test_sanitized_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_sanitized_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_test_sectionbitmaps_OBJECTS =  \
	test_sectionbitmaps-test_section_bitmaps.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.$(OBJEXT)
test_sectionbitmaps_OBJECTS = $(am_test_sectionbitmaps_OBJECTS)
test_sectionbitmaps_LDADD = $(LDADD)
test_sectionbitmaps_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(test_sectionbitmaps_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_testesb_OBJECTS = test_testesb-test_esb.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.$(OBJEXT) \
	$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.$(OBJEXT)
test_testesb_OBJECTS = $(am_test_testesb_OBJECTS)
test_testesb_LDADD = $(LDADD)
test_testesb_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_testesb_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_tied_OBJECTS = test_tied-test_dwarf_tied.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.$(OBJEXT) \
	$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.$(OBJEXT)
test_tied_OBJECTS = $(am_test_tied_OBJECTS)
test_tied_LDADD = $(LDADD)
test_tied_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_tied_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Po \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Po \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Po \
	$(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Po \
	./$(DEPDIR)/test_canonical-test_canonical.Po \
	./$(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Po \
	./$(DEPDIR)/test_dwarfstring-test_dwarfstring.Po \
	./$(DEPDIR)/test_dwgetopt-test_getopt.Po \
	./$(DEPDIR)/test_errmsglist-test_errmsglist.Po \
	./$(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Po \
	./$(DEPDIR)/test_getnametest-test_getname.Po \
	./$(DEPDIR)/test_helpertree-test_helpertree.Po \
	./$(DEPDIR)/test_linkedtopath-test_linkedtopath.Po \
	./$(DEPDIR)/test_macrocheck-test_macrocheck.Po \
	./$(DEPDIR)/test_makenametest-test_makename.Po \
	./$(DEPDIR)/test_regex-test_regex.Po \
	./$(DEPDIR)/test_safestrcpy-test_safe_strcpy.Po \
	./$(DEPDIR)/test_sanitized-test_sanitized.Po \
	./$(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Po \
	./$(DEPDIR)/test_testesb-test_esb.Po \
	./$(DEPDIR)/test_tied-test_dwarf_tied.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(test_canonical_SOURCES) $(test_dwarflebtest_SOURCES) \
	$(test_dwarfstring_SOURCES) $(test_dwgetopt_SOURCES) \
	$(test_errmsglist_SOURCES) $(test_extra_flag_strings_SOURCES) \
	$(test_getnametest_SOURCES) $(test_helpertree_SOURCES) \
	$(test_linkedtopath_SOURCES) $(test_macrocheck_SOURCES) \
	$(test_makenametest_SOURCES) $(test_regex_SOURCES) \
	$(test_safestrcpy_SOURCES) $(test_sanitized_SOURCES) \
	$(test_sectionbitmaps_SOURCES) $(test_testesb_SOURCES) \
	$(test_tied_SOURCES)
DIST_SOURCES = $(test_canonical_SOURCES) $(test_dwarflebtest_SOURCES) \
	$(test_dwarfstring_SOURCES) $(test_dwgetopt_SOURCES) \
	$(test_errmsglist_SOURCES) $(test_extra_flag_strings_SOURCES) \
	$(test_getnametest_SOURCES) $(test_helpertree_SOURCES) \
	$(test_linkedtopath_SOURCES) $(test_macrocheck_SOURCES) \
	$(test_makenametest_SOURCES) $(test_regex_SOURCES) \
	$(test_safestrcpy_SOURCES) $(test_sanitized_SOURCES) \
	$(test_sectionbitmaps_SOURCES) $(test_testesb_SOURCES) \
	$(test_tied_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver ChangeLog
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DWARFGEN_LIBS = @DWARFGEN_LIBS@
DWARF_BIGENDIAN = @DWARF_BIGENDIAN@
DWARF_CFLAGS_WARN = @DWARF_CFLAGS_WARN@
DWARF_CXXFLAGS_WARN = @DWARF_CXXFLAGS_WARN@
DWARF_LIBS = @DWARF_LIBS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
VMAJ = @VMAJ@
ZLIB_CFLAGS = @ZLIB_CFLAGS@
ZLIB_LIBS = @ZLIB_LIBS@
ZSTD_CFLAGS = @ZSTD_CFLAGS@
ZSTD_LIBS = @ZSTD_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
release_info = @release_info@
requirements_libdwarf_libs = @requirements_libdwarf_libs@
requirements_libdwarf_pc = @requirements_libdwarf_pc@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
version_info = @version_info@
AUTOMAKE_OPTIONS = subdir-objects
MAINTAINERCLEANFILES = Makefile.in\
  dwarfdump.conf \
  getnametest.log \
  getnametest.trs \
  junk.debuglink1 \
  junk.debuglink1a \
  junk.debuglink1b \
  junk.debuglink1sed1 \
  junk.debuglink1sed2 \
  junk.debuglink2 \
  junk.debuglink2a \
  junk.debuglink2b \
  junk.jitreader.new \
  test_dwarfstring.log \
  test_dwarfstring.trs \
  test_dwgetopt.log \
  test_dwgetopt.trs \
  test_errmsglist.log \
  test_errmsglist.trs \
  test_extra_flag_strings.log \
  test_extra_flag_strings.trs \
  test_helpertree.log  \
  test_helpertree.trs \
  test_linkedtopath.log \
  test_linkedtopath.trs \
  test_macrocheck.log \
  test_macrocheck.trs \
  test_makenametest.log \
  test_makenametest.trs \
  test_objectaccess.log \
  test_objectaccess.trs \
  test_safestrcpy.log \
  test_safestrcpy.trs \
  test_sectionbitmaps.log \
  test_sectionbitmaps.trs \
  test_sanitized.log \
  test_sanitized.trs \
  test_testesb.log \
  test_testesb.trs 

test_canonical_SOURCES = test_canonical.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_canonical_append.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_safe_strcpy.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_safe_strcpy.h \
    $(top_srcdir)/src/bin/dwarfdump/dd_esb.c

test_canonical_CFLAGS = $(DWARF_CFLAGS_WARN)
test_canonical_CPPFLAGS = \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_dwarflebtest_SOURCES = test_dwarf_leb.c \
    $(top_srcdir)/src/lib/libdwarf/dwarf_leb.c

test_dwarflebtest_CFLAGS = $(DWARF_CFLAGS_WARN)
test_dwarflebtest_CPPFLAGS = -DTESTING \
-DLIBDWARF_BUILD \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_dwarfstring_SOURCES = test_dwarfstring.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_string.h \
   $(top_srcdir)/src/lib/libdwarf/dwarf_string.c

test_dwarfstring_CFLAGS = $(CFLAGS_WARN) $(DWARF_CFLAGS_WARN)
test_dwarfstring_CPPFLAGS = \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/lib/libdwarf

test_dwgetopt_SOURCES = test_getopt.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_getopt.h \
    $(top_srcdir)/src/bin/dwarfdump/dd_getopt.c

test_dwgetopt_CFLAGS = $(DWARF_CFLAGS_WARN)
test_dwgetopt_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump

test_errmsglist_SOURCES = test_errmsglist.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_safe_strcpy.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_safe_strcpy.h 

test_errmsglist_CFLAGS = $(DWARF_CFLAGS_WARN)
test_errmsglist_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/lib/libdwarf

test_extra_flag_strings_SOURCES = test_extra_flag_strings.c \
   $(top_srcdir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_string.h \
   $(top_srcdir)/src/lib/libdwarf/dwarf_string.c

test_extra_flag_strings_CFLAGS = $(CFLAGS_WARN) $(DWARF_CFLAGS_WARN)
test_extra_flag_strings_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/lib/libdwarfp \
-I$(top_srcdir)/src/lib/libdwarf

test_getnametest_SOURCES = test_getname.c \
    $(top_srcdir)/src/lib/libdwarf/dwarf_names.c

test_getnametest_CFLAGS = $(DWARF_CFLAGS_WARN)
test_getnametest_CPPFLAGS = -DTESTING \
-DLIBDWARF_BUILD \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/lib/libdwarf

test_helpertree_SOURCES = test_helpertree.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_helpertree.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_tsearchbal.c

test_helpertree_CFLAGS = $(DWARF_CFLAGS_WARN)
test_helpertree_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_linkedtopath_SOURCES = test_linkedtopath.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_string.h \
   $(top_srcdir)/src/lib/libdwarf/dwarf_string.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_safe_strcpy.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_safe_strcpy.h \
   $(top_srcdir)/src/lib/libdwarf/dwarf_debuglink.h \
   $(top_srcdir)/src/lib/libdwarf/dwarf_debuglink.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_error.h

test_linkedtopath_CFLAGS = $(DWARF_CFLAGS_WARN) -DTESTING
test_linkedtopath_CPPFLAGS = -DTESTING \
-DLIBDWARF_BUILD \
-I$(top_srcdir) \
-I$(top_builddir) \
-I$(top_srcdir)/src/lib/libdwarf

test_macrocheck_SOURCES = test_macrocheck.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_esb.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_tsearchbal.c

test_macrocheck_CFLAGS = $(DWARF_CFLAGS_WARN)
test_macrocheck_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_makenametest_SOURCES = test_makename.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_esb.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_makename.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_tsearchbal.c

test_makenametest_CFLAGS = $(DWARF_CFLAGS_WARN)
test_makenametest_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_regex_SOURCES = test_regex.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_regex.c 

test_regex_CFLAGS = $(DWARF_CFLAGS_WARN)
test_regex_CPPFLAGS = \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_safestrcpy_SOURCES = test_safe_strcpy.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_safe_strcpy.c \
   $(top_srcdir)/src/lib/libdwarf/dwarf_safe_strcpy.h 

test_safestrcpyCFLAGS = $(DWARF_CFLAGS_WARN)
test_safestrcpy_CPPFLAGS = \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/lib/libdwarf

test_sectionbitmaps_SOURCES = test_section_bitmaps.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_section_bitmaps.c

test_sectionbitmaps_CFLAGS = $(DWARF_CFLAGS_WARN)
test_sectionbitmaps_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_testesb_SOURCES = test_esb.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_esb.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_tsearchbal.c

test_testesb_CFLAGS = $(DWARF_CFLAGS_WARN)
test_testesb_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_sanitized_SOURCES = test_sanitized.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_esb.c \
    $(top_srcdir)/src/bin/dwarfdump/dd_sanitized.c

test_sanitized_CFLAGS = $(DWARF_CFLAGS_WARN)
test_sanitized_CPPFLAGS = -DTESTING \
-I$(top_srcdir) -I$(top_builddir) \
-I$(top_srcdir)/src/bin/dwarfdump \
-I$(top_srcdir)/src/lib/libdwarf

test_tied_SOURCES = test_dwarf_tied.c \
    $(top_srcdir)/src/lib/libdwarf/dwarf_tied.c \
    $(top_srcdir)/src/lib/libdwarf/dwarf_tsearchhash.c

test_tied_CFLAGS = $(DWARF_CFLAGS_WARN)
test_tied_CPPFLAGS = -DTESTING \
-I$(top_srcdir) \
-I$(top_srcdir)/src/lib/libdwarf


### no dwarfgen tests available.
AM_TESTS_ENVIRONMENT = DWTOPSRCDIR='$(top_srcdir)'; \
    export DWTOPSRCDIR ; \
    DWCOMPILERFLAGS='$(DWARF_CFLAGS_WARN)';\
    export DWCOMPILERFLAGS ;


### dummysource ignore is to be kept, but not used. 
### See buildingdummy.sh which is also not to be used.
EXTRA_DIST = \
buildingdummy.sh \
CMakeLists.txt \
debuglink2.base \
debuglink.base \
test_debuglink-a.sh \
test_debuglink-b.sh \
dummyexecutable \
dummyexecutable.debug \
dummysourceignore \
test_dwarfdumpLinux.sh  test_dwarfdumpMacos.sh \
test_dwarfdumpPE.sh  test_dwarfdumpsetup.sh \
test_dwarfdump.py \
test_dwarf_leb.c \
test_dwarf_tied.c \
test_dwdiff.py \
test_getname.c \
test_getopt.c \
test_helpertree.c \
jitreader.base \
test_jitreaderdiff.sh \
test_makename.c \
meson.build \
README.testcases \
test_section_bitmaps.c \
test_dwarfstring.c \
test_errmsglist.c \
test_esb.c \
test_sanitized.c \
test_extra_flag_strings.c \
test_linkedtopath.c \
test-mach-o-32.base \
test-mach-o-32.dSYM \
testobjLE32PE.base \
testobjLE32PE.exe \
testobjLE32PE.test.c \
testuriLE64ELf.base \
testuriLE64ELf.obj \
test_transformpath.py

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/bin/dwarfdump
	@: > $(top_builddir)/src/bin/dwarfdump/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)
	@: > $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_canonical$(EXEEXT): $(test_canonical_OBJECTS) $(test_canonical_DEPENDENCIES) $(EXTRA_test_canonical_DEPENDENCIES) 
	@rm -f test_canonical$(EXEEXT)
	$(AM_V_CCLD)$(test_canonical_LINK) $(test_canonical_OBJECTS) $(test_canonical_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/lib/libdwarf
	@: > $(top_builddir)/src/lib/libdwarf/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)
	@: > $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_dwarflebtest$(EXEEXT): $(test_dwarflebtest_OBJECTS) $(test_dwarflebtest_DEPENDENCIES) $(EXTRA_test_dwarflebtest_DEPENDENCIES) 
	@rm -f test_dwarflebtest$(EXEEXT)
	$(AM_V_CCLD)$(test_dwarflebtest_LINK) $(test_dwarflebtest_OBJECTS) $(test_dwarflebtest_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_dwarfstring$(EXEEXT): $(test_dwarfstring_OBJECTS) $(test_dwarfstring_DEPENDENCIES) $(EXTRA_test_dwarfstring_DEPENDENCIES) 
	@rm -f test_dwarfstring$(EXEEXT)
	$(AM_V_CCLD)$(test_dwarfstring_LINK) $(test_dwarfstring_OBJECTS) $(test_dwarfstring_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_dwgetopt$(EXEEXT): $(test_dwgetopt_OBJECTS) $(test_dwgetopt_DEPENDENCIES) $(EXTRA_test_dwgetopt_DEPENDENCIES) 
	@rm -f test_dwgetopt$(EXEEXT)
	$(AM_V_CCLD)$(test_dwgetopt_LINK) $(test_dwgetopt_OBJECTS) $(test_dwgetopt_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_errmsglist$(EXEEXT): $(test_errmsglist_OBJECTS) $(test_errmsglist_DEPENDENCIES) $(EXTRA_test_errmsglist_DEPENDENCIES) 
	@rm -f test_errmsglist$(EXEEXT)
	$(AM_V_CCLD)$(test_errmsglist_LINK) $(test_errmsglist_OBJECTS) $(test_errmsglist_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarfp/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/lib/libdwarfp
	@: > $(top_builddir)/src/lib/libdwarfp/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)
	@: > $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarfp/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_extra_flag_strings$(EXEEXT): $(test_extra_flag_strings_OBJECTS) $(test_extra_flag_strings_DEPENDENCIES) $(EXTRA_test_extra_flag_strings_DEPENDENCIES) 
	@rm -f test_extra_flag_strings$(EXEEXT)
	$(AM_V_CCLD)$(test_extra_flag_strings_LINK) $(test_extra_flag_strings_OBJECTS) $(test_extra_flag_strings_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_getnametest$(EXEEXT): $(test_getnametest_OBJECTS) $(test_getnametest_DEPENDENCIES) $(EXTRA_test_getnametest_DEPENDENCIES) 
	@rm -f test_getnametest$(EXEEXT)
	$(AM_V_CCLD)$(test_getnametest_LINK) $(test_getnametest_OBJECTS) $(test_getnametest_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_helpertree$(EXEEXT): $(test_helpertree_OBJECTS) $(test_helpertree_DEPENDENCIES) $(EXTRA_test_helpertree_DEPENDENCIES) 
	@rm -f test_helpertree$(EXEEXT)
	$(AM_V_CCLD)$(test_helpertree_LINK) $(test_helpertree_OBJECTS) $(test_helpertree_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_linkedtopath$(EXEEXT): $(test_linkedtopath_OBJECTS) $(test_linkedtopath_DEPENDENCIES) $(EXTRA_test_linkedtopath_DEPENDENCIES) 
	@rm -f test_linkedtopath$(EXEEXT)
	$(AM_V_CCLD)$(test_linkedtopath_LINK) $(test_linkedtopath_OBJECTS) $(test_linkedtopath_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_macrocheck$(EXEEXT): $(test_macrocheck_OBJECTS) $(test_macrocheck_DEPENDENCIES) $(EXTRA_test_macrocheck_DEPENDENCIES) 
	@rm -f test_macrocheck$(EXEEXT)
	$(AM_V_CCLD)$(test_macrocheck_LINK) $(test_macrocheck_OBJECTS) $(test_macrocheck_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_makenametest$(EXEEXT): $(test_makenametest_OBJECTS) $(test_makenametest_DEPENDENCIES) $(EXTRA_test_makenametest_DEPENDENCIES) 
	@rm -f test_makenametest$(EXEEXT)
	$(AM_V_CCLD)$(test_makenametest_LINK) $(test_makenametest_OBJECTS) $(test_makenametest_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_regex$(EXEEXT): $(test_regex_OBJECTS) $(test_regex_DEPENDENCIES) $(EXTRA_test_regex_DEPENDENCIES) 
	@rm -f test_regex$(EXEEXT)
	$(AM_V_CCLD)$(test_regex_LINK) $(test_regex_OBJECTS) $(test_regex_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_safestrcpy$(EXEEXT): $(test_safestrcpy_OBJECTS) $(test_safestrcpy_DEPENDENCIES) $(EXTRA_test_safestrcpy_DEPENDENCIES) 
	@rm -f test_safestrcpy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_safestrcpy_OBJECTS) $(test_safestrcpy_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_sanitized$(EXEEXT): $(test_sanitized_OBJECTS) $(test_sanitized_DEPENDENCIES) $(EXTRA_test_sanitized_DEPENDENCIES) 
	@rm -f test_sanitized$(EXEEXT)
	$(AM_V_CCLD)$(test_sanitized_LINK) $(test_sanitized_OBJECTS) $(test_sanitized_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_sectionbitmaps$(EXEEXT): $(test_sectionbitmaps_OBJECTS) $(test_sectionbitmaps_DEPENDENCIES) $(EXTRA_test_sectionbitmaps_DEPENDENCIES) 
	@rm -f test_sectionbitmaps$(EXEEXT)
	$(AM_V_CCLD)$(test_sectionbitmaps_LINK) $(test_sectionbitmaps_OBJECTS) $(test_sectionbitmaps_LDADD) $(LIBS)
$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.$(OBJEXT):  \
	$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp) \
	$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)

test_testesb$(EXEEXT): $(test_testesb_OBJECTS) $(test_testesb_DEPENDENCIES) $(EXTRA_test_testesb_DEPENDENCIES) 
	@rm -f test_testesb$(EXEEXT)
	$(AM_V_CCLD)$(test_testesb_LINK) $(test_testesb_OBJECTS) $(test_testesb_LDADD) $(LIBS)
$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.$(OBJEXT):  \
	$(top_builddir)/src/lib/libdwarf/$(am__dirstamp) \
	$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)

test_tied$(EXEEXT): $(test_tied_OBJECTS) $(test_tied_DEPENDENCIES) $(EXTRA_test_tied_DEPENDENCIES) 
	@rm -f test_tied$(EXEEXT)
	$(AM_V_CCLD)$(test_tied_LINK) $(test_tied_OBJECTS) $(test_tied_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f $(top_builddir)/src/bin/dwarfdump/*.$(OBJEXT)
	-rm -f $(top_builddir)/src/lib/libdwarf/*.$(OBJEXT)
	-rm -f $(top_builddir)/src/lib/libdwarfp/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@$(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_canonical-test_canonical.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dwarfstring-test_dwarfstring.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dwgetopt-test_getopt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_errmsglist-test_errmsglist.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_getnametest-test_getname.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_helpertree-test_helpertree.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_linkedtopath-test_linkedtopath.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_macrocheck-test_macrocheck.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_makenametest-test_makename.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_regex-test_regex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_safestrcpy-test_safe_strcpy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sanitized-test_sanitized.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_testesb-test_esb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tied-test_dwarf_tied.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

test_canonical-test_canonical.o: test_canonical.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT test_canonical-test_canonical.o -MD -MP -MF $(DEPDIR)/test_canonical-test_canonical.Tpo -c -o test_canonical-test_canonical.o `test -f 'test_canonical.c' || echo '$(srcdir)/'`test_canonical.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_canonical-test_canonical.Tpo $(DEPDIR)/test_canonical-test_canonical.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_canonical.c' object='test_canonical-test_canonical.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o test_canonical-test_canonical.o `test -f 'test_canonical.c' || echo '$(srcdir)/'`test_canonical.c

test_canonical-test_canonical.obj: test_canonical.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT test_canonical-test_canonical.obj -MD -MP -MF $(DEPDIR)/test_canonical-test_canonical.Tpo -c -o test_canonical-test_canonical.obj `if test -f 'test_canonical.c'; then $(CYGPATH_W) 'test_canonical.c'; else $(CYGPATH_W) '$(srcdir)/test_canonical.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_canonical-test_canonical.Tpo $(DEPDIR)/test_canonical-test_canonical.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_canonical.c' object='test_canonical-test_canonical.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o test_canonical-test_canonical.obj `if test -f 'test_canonical.c'; then $(CYGPATH_W) 'test_canonical.c'; else $(CYGPATH_W) '$(srcdir)/test_canonical.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.o: $(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c' object='$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c

$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.obj: $(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c' object='$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_canonical_append.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_canonical_append.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.o: $(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c' object='$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c

$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.obj: $(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c' object='$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_safe_strcpy.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_safe_strcpy.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.o: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c

$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.obj: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_canonical_CPPFLAGS) $(CPPFLAGS) $(test_canonical_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_canonical-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`

test_dwarflebtest-test_dwarf_leb.o: test_dwarf_leb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -MT test_dwarflebtest-test_dwarf_leb.o -MD -MP -MF $(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Tpo -c -o test_dwarflebtest-test_dwarf_leb.o `test -f 'test_dwarf_leb.c' || echo '$(srcdir)/'`test_dwarf_leb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Tpo $(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_dwarf_leb.c' object='test_dwarflebtest-test_dwarf_leb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -c -o test_dwarflebtest-test_dwarf_leb.o `test -f 'test_dwarf_leb.c' || echo '$(srcdir)/'`test_dwarf_leb.c

test_dwarflebtest-test_dwarf_leb.obj: test_dwarf_leb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -MT test_dwarflebtest-test_dwarf_leb.obj -MD -MP -MF $(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Tpo -c -o test_dwarflebtest-test_dwarf_leb.obj `if test -f 'test_dwarf_leb.c'; then $(CYGPATH_W) 'test_dwarf_leb.c'; else $(CYGPATH_W) '$(srcdir)/test_dwarf_leb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Tpo $(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_dwarf_leb.c' object='test_dwarflebtest-test_dwarf_leb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -c -o test_dwarflebtest-test_dwarf_leb.obj `if test -f 'test_dwarf_leb.c'; then $(CYGPATH_W) 'test_dwarf_leb.c'; else $(CYGPATH_W) '$(srcdir)/test_dwarf_leb.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.o: $(top_builddir)/src/lib/libdwarf/dwarf_leb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_leb.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_leb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_leb.c' object='$(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_leb.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_leb.c

$(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.obj: $(top_builddir)/src/lib/libdwarf/dwarf_leb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_leb.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_leb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_leb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_leb.c' object='$(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarflebtest_CPPFLAGS) $(CPPFLAGS) $(test_dwarflebtest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_dwarflebtest-dwarf_leb.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_leb.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_leb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_leb.c'; fi`

test_dwarfstring-test_dwarfstring.o: test_dwarfstring.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -MT test_dwarfstring-test_dwarfstring.o -MD -MP -MF $(DEPDIR)/test_dwarfstring-test_dwarfstring.Tpo -c -o test_dwarfstring-test_dwarfstring.o `test -f 'test_dwarfstring.c' || echo '$(srcdir)/'`test_dwarfstring.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dwarfstring-test_dwarfstring.Tpo $(DEPDIR)/test_dwarfstring-test_dwarfstring.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_dwarfstring.c' object='test_dwarfstring-test_dwarfstring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -c -o test_dwarfstring-test_dwarfstring.o `test -f 'test_dwarfstring.c' || echo '$(srcdir)/'`test_dwarfstring.c

test_dwarfstring-test_dwarfstring.obj: test_dwarfstring.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -MT test_dwarfstring-test_dwarfstring.obj -MD -MP -MF $(DEPDIR)/test_dwarfstring-test_dwarfstring.Tpo -c -o test_dwarfstring-test_dwarfstring.obj `if test -f 'test_dwarfstring.c'; then $(CYGPATH_W) 'test_dwarfstring.c'; else $(CYGPATH_W) '$(srcdir)/test_dwarfstring.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dwarfstring-test_dwarfstring.Tpo $(DEPDIR)/test_dwarfstring-test_dwarfstring.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_dwarfstring.c' object='test_dwarfstring-test_dwarfstring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -c -o test_dwarfstring-test_dwarfstring.obj `if test -f 'test_dwarfstring.c'; then $(CYGPATH_W) 'test_dwarfstring.c'; else $(CYGPATH_W) '$(srcdir)/test_dwarfstring.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.o: $(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_string.c' object='$(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_string.c

$(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.obj: $(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_string.c' object='$(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwarfstring_CPPFLAGS) $(CPPFLAGS) $(test_dwarfstring_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_dwarfstring-dwarf_string.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; fi`

test_dwgetopt-test_getopt.o: test_getopt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -MT test_dwgetopt-test_getopt.o -MD -MP -MF $(DEPDIR)/test_dwgetopt-test_getopt.Tpo -c -o test_dwgetopt-test_getopt.o `test -f 'test_getopt.c' || echo '$(srcdir)/'`test_getopt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dwgetopt-test_getopt.Tpo $(DEPDIR)/test_dwgetopt-test_getopt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_getopt.c' object='test_dwgetopt-test_getopt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -c -o test_dwgetopt-test_getopt.o `test -f 'test_getopt.c' || echo '$(srcdir)/'`test_getopt.c

test_dwgetopt-test_getopt.obj: test_getopt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -MT test_dwgetopt-test_getopt.obj -MD -MP -MF $(DEPDIR)/test_dwgetopt-test_getopt.Tpo -c -o test_dwgetopt-test_getopt.obj `if test -f 'test_getopt.c'; then $(CYGPATH_W) 'test_getopt.c'; else $(CYGPATH_W) '$(srcdir)/test_getopt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_dwgetopt-test_getopt.Tpo $(DEPDIR)/test_dwgetopt-test_getopt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_getopt.c' object='test_dwgetopt-test_getopt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -c -o test_dwgetopt-test_getopt.obj `if test -f 'test_getopt.c'; then $(CYGPATH_W) 'test_getopt.c'; else $(CYGPATH_W) '$(srcdir)/test_getopt.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.o: $(top_builddir)/src/bin/dwarfdump/dd_getopt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_getopt.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_getopt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_getopt.c' object='$(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_getopt.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_getopt.c

$(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.obj: $(top_builddir)/src/bin/dwarfdump/dd_getopt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_getopt.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_getopt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_getopt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_getopt.c' object='$(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_dwgetopt_CPPFLAGS) $(CPPFLAGS) $(test_dwgetopt_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_dwgetopt-dd_getopt.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_getopt.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_getopt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_getopt.c'; fi`

test_errmsglist-test_errmsglist.o: test_errmsglist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -MT test_errmsglist-test_errmsglist.o -MD -MP -MF $(DEPDIR)/test_errmsglist-test_errmsglist.Tpo -c -o test_errmsglist-test_errmsglist.o `test -f 'test_errmsglist.c' || echo '$(srcdir)/'`test_errmsglist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_errmsglist-test_errmsglist.Tpo $(DEPDIR)/test_errmsglist-test_errmsglist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_errmsglist.c' object='test_errmsglist-test_errmsglist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -c -o test_errmsglist-test_errmsglist.o `test -f 'test_errmsglist.c' || echo '$(srcdir)/'`test_errmsglist.c

test_errmsglist-test_errmsglist.obj: test_errmsglist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -MT test_errmsglist-test_errmsglist.obj -MD -MP -MF $(DEPDIR)/test_errmsglist-test_errmsglist.Tpo -c -o test_errmsglist-test_errmsglist.obj `if test -f 'test_errmsglist.c'; then $(CYGPATH_W) 'test_errmsglist.c'; else $(CYGPATH_W) '$(srcdir)/test_errmsglist.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_errmsglist-test_errmsglist.Tpo $(DEPDIR)/test_errmsglist-test_errmsglist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_errmsglist.c' object='test_errmsglist-test_errmsglist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -c -o test_errmsglist-test_errmsglist.obj `if test -f 'test_errmsglist.c'; then $(CYGPATH_W) 'test_errmsglist.c'; else $(CYGPATH_W) '$(srcdir)/test_errmsglist.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.o: $(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' object='$(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c

$(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.obj: $(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' object='$(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_errmsglist_CPPFLAGS) $(CPPFLAGS) $(test_errmsglist_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_errmsglist-dwarf_safe_strcpy.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; fi`

test_extra_flag_strings-test_extra_flag_strings.o: test_extra_flag_strings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -MT test_extra_flag_strings-test_extra_flag_strings.o -MD -MP -MF $(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Tpo -c -o test_extra_flag_strings-test_extra_flag_strings.o `test -f 'test_extra_flag_strings.c' || echo '$(srcdir)/'`test_extra_flag_strings.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Tpo $(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_extra_flag_strings.c' object='test_extra_flag_strings-test_extra_flag_strings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -c -o test_extra_flag_strings-test_extra_flag_strings.o `test -f 'test_extra_flag_strings.c' || echo '$(srcdir)/'`test_extra_flag_strings.c

test_extra_flag_strings-test_extra_flag_strings.obj: test_extra_flag_strings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -MT test_extra_flag_strings-test_extra_flag_strings.obj -MD -MP -MF $(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Tpo -c -o test_extra_flag_strings-test_extra_flag_strings.obj `if test -f 'test_extra_flag_strings.c'; then $(CYGPATH_W) 'test_extra_flag_strings.c'; else $(CYGPATH_W) '$(srcdir)/test_extra_flag_strings.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Tpo $(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_extra_flag_strings.c' object='test_extra_flag_strings-test_extra_flag_strings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -c -o test_extra_flag_strings-test_extra_flag_strings.obj `if test -f 'test_extra_flag_strings.c'; then $(CYGPATH_W) 'test_extra_flag_strings.c'; else $(CYGPATH_W) '$(srcdir)/test_extra_flag_strings.c'; fi`

$(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.o: $(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.o -MD -MP -MF $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Tpo -c -o $(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.o `test -f '$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Tpo $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c' object='$(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.o `test -f '$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c

$(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.obj: $(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Tpo -c -o $(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.obj `if test -f '$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Tpo $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c' object='$(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarfp/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.obj `if test -f '$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarfp/dwarf_pro_log_extra_flag_strings.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.o: $(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_string.c' object='$(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_string.c

$(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.obj: $(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_string.c' object='$(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_extra_flag_strings_CPPFLAGS) $(CPPFLAGS) $(test_extra_flag_strings_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_extra_flag_strings-dwarf_string.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; fi`

test_getnametest-test_getname.o: test_getname.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -MT test_getnametest-test_getname.o -MD -MP -MF $(DEPDIR)/test_getnametest-test_getname.Tpo -c -o test_getnametest-test_getname.o `test -f 'test_getname.c' || echo '$(srcdir)/'`test_getname.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_getnametest-test_getname.Tpo $(DEPDIR)/test_getnametest-test_getname.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_getname.c' object='test_getnametest-test_getname.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -c -o test_getnametest-test_getname.o `test -f 'test_getname.c' || echo '$(srcdir)/'`test_getname.c

test_getnametest-test_getname.obj: test_getname.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -MT test_getnametest-test_getname.obj -MD -MP -MF $(DEPDIR)/test_getnametest-test_getname.Tpo -c -o test_getnametest-test_getname.obj `if test -f 'test_getname.c'; then $(CYGPATH_W) 'test_getname.c'; else $(CYGPATH_W) '$(srcdir)/test_getname.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_getnametest-test_getname.Tpo $(DEPDIR)/test_getnametest-test_getname.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_getname.c' object='test_getnametest-test_getname.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -c -o test_getnametest-test_getname.obj `if test -f 'test_getname.c'; then $(CYGPATH_W) 'test_getname.c'; else $(CYGPATH_W) '$(srcdir)/test_getname.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.o: $(top_builddir)/src/lib/libdwarf/dwarf_names.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_names.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_names.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_names.c' object='$(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_names.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_names.c

$(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.obj: $(top_builddir)/src/lib/libdwarf/dwarf_names.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_names.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_names.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_names.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_names.c' object='$(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_getnametest_CPPFLAGS) $(CPPFLAGS) $(test_getnametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_getnametest-dwarf_names.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_names.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_names.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_names.c'; fi`

test_helpertree-test_helpertree.o: test_helpertree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -MT test_helpertree-test_helpertree.o -MD -MP -MF $(DEPDIR)/test_helpertree-test_helpertree.Tpo -c -o test_helpertree-test_helpertree.o `test -f 'test_helpertree.c' || echo '$(srcdir)/'`test_helpertree.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_helpertree-test_helpertree.Tpo $(DEPDIR)/test_helpertree-test_helpertree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_helpertree.c' object='test_helpertree-test_helpertree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -c -o test_helpertree-test_helpertree.o `test -f 'test_helpertree.c' || echo '$(srcdir)/'`test_helpertree.c

test_helpertree-test_helpertree.obj: test_helpertree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -MT test_helpertree-test_helpertree.obj -MD -MP -MF $(DEPDIR)/test_helpertree-test_helpertree.Tpo -c -o test_helpertree-test_helpertree.obj `if test -f 'test_helpertree.c'; then $(CYGPATH_W) 'test_helpertree.c'; else $(CYGPATH_W) '$(srcdir)/test_helpertree.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_helpertree-test_helpertree.Tpo $(DEPDIR)/test_helpertree-test_helpertree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_helpertree.c' object='test_helpertree-test_helpertree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -c -o test_helpertree-test_helpertree.obj `if test -f 'test_helpertree.c'; then $(CYGPATH_W) 'test_helpertree.c'; else $(CYGPATH_W) '$(srcdir)/test_helpertree.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.o: $(top_builddir)/src/bin/dwarfdump/dd_helpertree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c' object='$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c

$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.obj: $(top_builddir)/src/bin/dwarfdump/dd_helpertree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c' object='$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_helpertree.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_helpertree.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.o: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c

$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.obj: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_helpertree_CPPFLAGS) $(CPPFLAGS) $(test_helpertree_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_helpertree-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`

test_linkedtopath-test_linkedtopath.o: test_linkedtopath.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT test_linkedtopath-test_linkedtopath.o -MD -MP -MF $(DEPDIR)/test_linkedtopath-test_linkedtopath.Tpo -c -o test_linkedtopath-test_linkedtopath.o `test -f 'test_linkedtopath.c' || echo '$(srcdir)/'`test_linkedtopath.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_linkedtopath-test_linkedtopath.Tpo $(DEPDIR)/test_linkedtopath-test_linkedtopath.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_linkedtopath.c' object='test_linkedtopath-test_linkedtopath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o test_linkedtopath-test_linkedtopath.o `test -f 'test_linkedtopath.c' || echo '$(srcdir)/'`test_linkedtopath.c

test_linkedtopath-test_linkedtopath.obj: test_linkedtopath.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT test_linkedtopath-test_linkedtopath.obj -MD -MP -MF $(DEPDIR)/test_linkedtopath-test_linkedtopath.Tpo -c -o test_linkedtopath-test_linkedtopath.obj `if test -f 'test_linkedtopath.c'; then $(CYGPATH_W) 'test_linkedtopath.c'; else $(CYGPATH_W) '$(srcdir)/test_linkedtopath.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_linkedtopath-test_linkedtopath.Tpo $(DEPDIR)/test_linkedtopath-test_linkedtopath.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_linkedtopath.c' object='test_linkedtopath-test_linkedtopath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o test_linkedtopath-test_linkedtopath.obj `if test -f 'test_linkedtopath.c'; then $(CYGPATH_W) 'test_linkedtopath.c'; else $(CYGPATH_W) '$(srcdir)/test_linkedtopath.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.o: $(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_string.c' object='$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_string.c

$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.obj: $(top_builddir)/src/lib/libdwarf/dwarf_string.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_string.c' object='$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_string.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_string.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.o: $(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' object='$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c

$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.obj: $(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' object='$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_safe_strcpy.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.o: $(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c' object='$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c

$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.obj: $(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c' object='$(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_linkedtopath_CPPFLAGS) $(CPPFLAGS) $(test_linkedtopath_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_linkedtopath-dwarf_debuglink.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_debuglink.c'; fi`

test_macrocheck-test_macrocheck.o: test_macrocheck.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -MT test_macrocheck-test_macrocheck.o -MD -MP -MF $(DEPDIR)/test_macrocheck-test_macrocheck.Tpo -c -o test_macrocheck-test_macrocheck.o `test -f 'test_macrocheck.c' || echo '$(srcdir)/'`test_macrocheck.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_macrocheck-test_macrocheck.Tpo $(DEPDIR)/test_macrocheck-test_macrocheck.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_macrocheck.c' object='test_macrocheck-test_macrocheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -c -o test_macrocheck-test_macrocheck.o `test -f 'test_macrocheck.c' || echo '$(srcdir)/'`test_macrocheck.c

test_macrocheck-test_macrocheck.obj: test_macrocheck.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -MT test_macrocheck-test_macrocheck.obj -MD -MP -MF $(DEPDIR)/test_macrocheck-test_macrocheck.Tpo -c -o test_macrocheck-test_macrocheck.obj `if test -f 'test_macrocheck.c'; then $(CYGPATH_W) 'test_macrocheck.c'; else $(CYGPATH_W) '$(srcdir)/test_macrocheck.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_macrocheck-test_macrocheck.Tpo $(DEPDIR)/test_macrocheck-test_macrocheck.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_macrocheck.c' object='test_macrocheck-test_macrocheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -c -o test_macrocheck-test_macrocheck.obj `if test -f 'test_macrocheck.c'; then $(CYGPATH_W) 'test_macrocheck.c'; else $(CYGPATH_W) '$(srcdir)/test_macrocheck.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.o: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c

$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.obj: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.o: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c

$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.obj: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_macrocheck_CPPFLAGS) $(CPPFLAGS) $(test_macrocheck_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_macrocheck-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`

test_makenametest-test_makename.o: test_makename.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT test_makenametest-test_makename.o -MD -MP -MF $(DEPDIR)/test_makenametest-test_makename.Tpo -c -o test_makenametest-test_makename.o `test -f 'test_makename.c' || echo '$(srcdir)/'`test_makename.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_makenametest-test_makename.Tpo $(DEPDIR)/test_makenametest-test_makename.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_makename.c' object='test_makenametest-test_makename.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o test_makenametest-test_makename.o `test -f 'test_makename.c' || echo '$(srcdir)/'`test_makename.c

test_makenametest-test_makename.obj: test_makename.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT test_makenametest-test_makename.obj -MD -MP -MF $(DEPDIR)/test_makenametest-test_makename.Tpo -c -o test_makenametest-test_makename.obj `if test -f 'test_makename.c'; then $(CYGPATH_W) 'test_makename.c'; else $(CYGPATH_W) '$(srcdir)/test_makename.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_makenametest-test_makename.Tpo $(DEPDIR)/test_makenametest-test_makename.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_makename.c' object='test_makenametest-test_makename.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o test_makenametest-test_makename.obj `if test -f 'test_makename.c'; then $(CYGPATH_W) 'test_makename.c'; else $(CYGPATH_W) '$(srcdir)/test_makename.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.o: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c

$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.obj: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.o: $(top_builddir)/src/bin/dwarfdump/dd_makename.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_makename.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_makename.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_makename.c' object='$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_makename.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_makename.c

$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.obj: $(top_builddir)/src/bin/dwarfdump/dd_makename.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_makename.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_makename.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_makename.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_makename.c' object='$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_makename.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_makename.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_makename.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_makename.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.o: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c

$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.obj: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_makenametest_CPPFLAGS) $(CPPFLAGS) $(test_makenametest_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_makenametest-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`

test_regex-test_regex.o: test_regex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -MT test_regex-test_regex.o -MD -MP -MF $(DEPDIR)/test_regex-test_regex.Tpo -c -o test_regex-test_regex.o `test -f 'test_regex.c' || echo '$(srcdir)/'`test_regex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_regex-test_regex.Tpo $(DEPDIR)/test_regex-test_regex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_regex.c' object='test_regex-test_regex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -c -o test_regex-test_regex.o `test -f 'test_regex.c' || echo '$(srcdir)/'`test_regex.c

test_regex-test_regex.obj: test_regex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -MT test_regex-test_regex.obj -MD -MP -MF $(DEPDIR)/test_regex-test_regex.Tpo -c -o test_regex-test_regex.obj `if test -f 'test_regex.c'; then $(CYGPATH_W) 'test_regex.c'; else $(CYGPATH_W) '$(srcdir)/test_regex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_regex-test_regex.Tpo $(DEPDIR)/test_regex-test_regex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_regex.c' object='test_regex-test_regex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -c -o test_regex-test_regex.obj `if test -f 'test_regex.c'; then $(CYGPATH_W) 'test_regex.c'; else $(CYGPATH_W) '$(srcdir)/test_regex.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.o: $(top_builddir)/src/bin/dwarfdump/dd_regex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_regex.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_regex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_regex.c' object='$(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_regex.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_regex.c

$(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.obj: $(top_builddir)/src/bin/dwarfdump/dd_regex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_regex.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_regex.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_regex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_regex.c' object='$(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_regex_CPPFLAGS) $(CPPFLAGS) $(test_regex_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_regex-dd_regex.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_regex.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_regex.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_regex.c'; fi`

test_safestrcpy-test_safe_strcpy.o: test_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_safestrcpy-test_safe_strcpy.o -MD -MP -MF $(DEPDIR)/test_safestrcpy-test_safe_strcpy.Tpo -c -o test_safestrcpy-test_safe_strcpy.o `test -f 'test_safe_strcpy.c' || echo '$(srcdir)/'`test_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_safestrcpy-test_safe_strcpy.Tpo $(DEPDIR)/test_safestrcpy-test_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_safe_strcpy.c' object='test_safestrcpy-test_safe_strcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_safestrcpy-test_safe_strcpy.o `test -f 'test_safe_strcpy.c' || echo '$(srcdir)/'`test_safe_strcpy.c

test_safestrcpy-test_safe_strcpy.obj: test_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_safestrcpy-test_safe_strcpy.obj -MD -MP -MF $(DEPDIR)/test_safestrcpy-test_safe_strcpy.Tpo -c -o test_safestrcpy-test_safe_strcpy.obj `if test -f 'test_safe_strcpy.c'; then $(CYGPATH_W) 'test_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/test_safe_strcpy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_safestrcpy-test_safe_strcpy.Tpo $(DEPDIR)/test_safestrcpy-test_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_safe_strcpy.c' object='test_safestrcpy-test_safe_strcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_safestrcpy-test_safe_strcpy.obj `if test -f 'test_safe_strcpy.c'; then $(CYGPATH_W) 'test_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/test_safe_strcpy.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.o: $(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' object='$(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c

$(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.obj: $(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c' object='$(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_safestrcpy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_safestrcpy-dwarf_safe_strcpy.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_safe_strcpy.c'; fi`

test_sanitized-test_sanitized.o: test_sanitized.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -MT test_sanitized-test_sanitized.o -MD -MP -MF $(DEPDIR)/test_sanitized-test_sanitized.Tpo -c -o test_sanitized-test_sanitized.o `test -f 'test_sanitized.c' || echo '$(srcdir)/'`test_sanitized.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sanitized-test_sanitized.Tpo $(DEPDIR)/test_sanitized-test_sanitized.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_sanitized.c' object='test_sanitized-test_sanitized.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -c -o test_sanitized-test_sanitized.o `test -f 'test_sanitized.c' || echo '$(srcdir)/'`test_sanitized.c

test_sanitized-test_sanitized.obj: test_sanitized.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -MT test_sanitized-test_sanitized.obj -MD -MP -MF $(DEPDIR)/test_sanitized-test_sanitized.Tpo -c -o test_sanitized-test_sanitized.obj `if test -f 'test_sanitized.c'; then $(CYGPATH_W) 'test_sanitized.c'; else $(CYGPATH_W) '$(srcdir)/test_sanitized.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sanitized-test_sanitized.Tpo $(DEPDIR)/test_sanitized-test_sanitized.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_sanitized.c' object='test_sanitized-test_sanitized.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -c -o test_sanitized-test_sanitized.obj `if test -f 'test_sanitized.c'; then $(CYGPATH_W) 'test_sanitized.c'; else $(CYGPATH_W) '$(srcdir)/test_sanitized.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.o: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c

$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.obj: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.o: $(top_builddir)/src/bin/dwarfdump/dd_sanitized.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c' object='$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c

$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.obj: $(top_builddir)/src/bin/dwarfdump/dd_sanitized.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c' object='$(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sanitized_CPPFLAGS) $(CPPFLAGS) $(test_sanitized_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_sanitized-dd_sanitized.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_sanitized.c'; fi`

test_sectionbitmaps-test_section_bitmaps.o: test_section_bitmaps.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -MT test_sectionbitmaps-test_section_bitmaps.o -MD -MP -MF $(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Tpo -c -o test_sectionbitmaps-test_section_bitmaps.o `test -f 'test_section_bitmaps.c' || echo '$(srcdir)/'`test_section_bitmaps.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Tpo $(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_section_bitmaps.c' object='test_sectionbitmaps-test_section_bitmaps.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -c -o test_sectionbitmaps-test_section_bitmaps.o `test -f 'test_section_bitmaps.c' || echo '$(srcdir)/'`test_section_bitmaps.c

test_sectionbitmaps-test_section_bitmaps.obj: test_section_bitmaps.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -MT test_sectionbitmaps-test_section_bitmaps.obj -MD -MP -MF $(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Tpo -c -o test_sectionbitmaps-test_section_bitmaps.obj `if test -f 'test_section_bitmaps.c'; then $(CYGPATH_W) 'test_section_bitmaps.c'; else $(CYGPATH_W) '$(srcdir)/test_section_bitmaps.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Tpo $(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_section_bitmaps.c' object='test_sectionbitmaps-test_section_bitmaps.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -c -o test_sectionbitmaps-test_section_bitmaps.obj `if test -f 'test_section_bitmaps.c'; then $(CYGPATH_W) 'test_section_bitmaps.c'; else $(CYGPATH_W) '$(srcdir)/test_section_bitmaps.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.o: $(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c' object='$(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c

$(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.obj: $(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c' object='$(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_sectionbitmaps_CPPFLAGS) $(CPPFLAGS) $(test_sectionbitmaps_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_sectionbitmaps-dd_section_bitmaps.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_section_bitmaps.c'; fi`

test_testesb-test_esb.o: test_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -MT test_testesb-test_esb.o -MD -MP -MF $(DEPDIR)/test_testesb-test_esb.Tpo -c -o test_testesb-test_esb.o `test -f 'test_esb.c' || echo '$(srcdir)/'`test_esb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_testesb-test_esb.Tpo $(DEPDIR)/test_testesb-test_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_esb.c' object='test_testesb-test_esb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -c -o test_testesb-test_esb.o `test -f 'test_esb.c' || echo '$(srcdir)/'`test_esb.c

test_testesb-test_esb.obj: test_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -MT test_testesb-test_esb.obj -MD -MP -MF $(DEPDIR)/test_testesb-test_esb.Tpo -c -o test_testesb-test_esb.obj `if test -f 'test_esb.c'; then $(CYGPATH_W) 'test_esb.c'; else $(CYGPATH_W) '$(srcdir)/test_esb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_testesb-test_esb.Tpo $(DEPDIR)/test_testesb-test_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_esb.c' object='test_testesb-test_esb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -c -o test_testesb-test_esb.obj `if test -f 'test_esb.c'; then $(CYGPATH_W) 'test_esb.c'; else $(CYGPATH_W) '$(srcdir)/test_esb.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.o: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_esb.c

$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.obj: $(top_builddir)/src/bin/dwarfdump/dd_esb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_esb.c' object='$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_esb.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_esb.c'; fi`

$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.o: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.o -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.o `test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' || echo '$(srcdir)/'`$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c

$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.obj: $(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.obj -MD -MP -MF $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Tpo -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Tpo $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c' object='$(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_testesb_CPPFLAGS) $(CPPFLAGS) $(test_testesb_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/bin/dwarfdump/test_testesb-dd_tsearchbal.obj `if test -f '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; then $(CYGPATH_W) '$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/bin/dwarfdump/dd_tsearchbal.c'; fi`

test_tied-test_dwarf_tied.o: test_dwarf_tied.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -MT test_tied-test_dwarf_tied.o -MD -MP -MF $(DEPDIR)/test_tied-test_dwarf_tied.Tpo -c -o test_tied-test_dwarf_tied.o `test -f 'test_dwarf_tied.c' || echo '$(srcdir)/'`test_dwarf_tied.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_tied-test_dwarf_tied.Tpo $(DEPDIR)/test_tied-test_dwarf_tied.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_dwarf_tied.c' object='test_tied-test_dwarf_tied.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -c -o test_tied-test_dwarf_tied.o `test -f 'test_dwarf_tied.c' || echo '$(srcdir)/'`test_dwarf_tied.c

test_tied-test_dwarf_tied.obj: test_dwarf_tied.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -MT test_tied-test_dwarf_tied.obj -MD -MP -MF $(DEPDIR)/test_tied-test_dwarf_tied.Tpo -c -o test_tied-test_dwarf_tied.obj `if test -f 'test_dwarf_tied.c'; then $(CYGPATH_W) 'test_dwarf_tied.c'; else $(CYGPATH_W) '$(srcdir)/test_dwarf_tied.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_tied-test_dwarf_tied.Tpo $(DEPDIR)/test_tied-test_dwarf_tied.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test_dwarf_tied.c' object='test_tied-test_dwarf_tied.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -c -o test_tied-test_dwarf_tied.obj `if test -f 'test_dwarf_tied.c'; then $(CYGPATH_W) 'test_dwarf_tied.c'; else $(CYGPATH_W) '$(srcdir)/test_dwarf_tied.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.o: $(top_builddir)/src/lib/libdwarf/dwarf_tied.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tied.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_tied.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_tied.c' object='$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tied.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_tied.c

$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.obj: $(top_builddir)/src/lib/libdwarf/dwarf_tied.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tied.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_tied.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_tied.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_tied.c' object='$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tied.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tied.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_tied.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_tied.c'; fi`

$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.o: $(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.o -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c' object='$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.o `test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c' || echo '$(srcdir)/'`$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c

$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.obj: $(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -MT $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.obj -MD -MP -MF $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Tpo -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Tpo $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c' object='$(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_tied_CPPFLAGS) $(CPPFLAGS) $(test_tied_CFLAGS) $(CFLAGS) -c -o $(top_builddir)/src/lib/libdwarf/test_tied-dwarf_tsearchhash.obj `if test -f '$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c'; then $(CYGPATH_W) '$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/lib/libdwarf/dwarf_tsearchhash.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_canonical.log: test_canonical$(EXEEXT)
	@p='test_canonical$(EXEEXT)'; \
	b='test_canonical'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dwarflebtest.log: test_dwarflebtest$(EXEEXT)
	@p='test_dwarflebtest$(EXEEXT)'; \
	b='test_dwarflebtest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dwarfstring.log: test_dwarfstring$(EXEEXT)
	@p='test_dwarfstring$(EXEEXT)'; \
	b='test_dwarfstring'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dwgetopt.log: test_dwgetopt$(EXEEXT)
	@p='test_dwgetopt$(EXEEXT)'; \
	b='test_dwgetopt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_errmsglist.log: test_errmsglist$(EXEEXT)
	@p='test_errmsglist$(EXEEXT)'; \
	b='test_errmsglist'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_extra_flag_strings.log: test_extra_flag_strings$(EXEEXT)
	@p='test_extra_flag_strings$(EXEEXT)'; \
	b='test_extra_flag_strings'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_getnametest.log: test_getnametest$(EXEEXT)
	@p='test_getnametest$(EXEEXT)'; \
	b='test_getnametest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_helpertree.log: test_helpertree$(EXEEXT)
	@p='test_helpertree$(EXEEXT)'; \
	b='test_helpertree'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_linkedtopath.log: test_linkedtopath$(EXEEXT)
	@p='test_linkedtopath$(EXEEXT)'; \
	b='test_linkedtopath'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_macrocheck.log: test_macrocheck$(EXEEXT)
	@p='test_macrocheck$(EXEEXT)'; \
	b='test_macrocheck'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_makenametest.log: test_makenametest$(EXEEXT)
	@p='test_makenametest$(EXEEXT)'; \
	b='test_makenametest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_regex.log: test_regex$(EXEEXT)
	@p='test_regex$(EXEEXT)'; \
	b='test_regex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_safestrcpy.log: test_safestrcpy$(EXEEXT)
	@p='test_safestrcpy$(EXEEXT)'; \
	b='test_safestrcpy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_sectionbitmaps.log: test_sectionbitmaps$(EXEEXT)
	@p='test_sectionbitmaps$(EXEEXT)'; \
	b='test_sectionbitmaps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_testesb.log: test_testesb$(EXEEXT)
	@p='test_testesb$(EXEEXT)'; \
	b='test_testesb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_sanitized.log: test_sanitized$(EXEEXT)
	@p='test_sanitized$(EXEEXT)'; \
	b='test_sanitized'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_tied.log: test_tied$(EXEEXT)
	@p='test_tied$(EXEEXT)'; \
	b='test_tied'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_debuglink-a.sh.log: test_debuglink-a.sh
	@p='test_debuglink-a.sh'; \
	b='test_debuglink-a.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_debuglink-b.sh.log: test_debuglink-b.sh
	@p='test_debuglink-b.sh'; \
	b='test_debuglink-b.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dwarfdumpLinux.sh.log: test_dwarfdumpLinux.sh
	@p='test_dwarfdumpLinux.sh'; \
	b='test_dwarfdumpLinux.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dwarfdumpPE.sh.log: test_dwarfdumpPE.sh
	@p='test_dwarfdumpPE.sh'; \
	b='test_dwarfdumpPE.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dwarfdumpMacos.sh.log: test_dwarfdumpMacos.sh
	@p='test_dwarfdumpMacos.sh'; \
	b='test_dwarfdumpMacos.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_jitreaderdiff.sh.log: test_jitreaderdiff.sh
	@p='test_jitreaderdiff.sh'; \
	b='test_jitreaderdiff.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)" || rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/$(am__dirstamp)
	-test -z "$(top_builddir)/src/bin/dwarfdump/$(am__dirstamp)" || rm -f $(top_builddir)/src/bin/dwarfdump/$(am__dirstamp)
	-test -z "$(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)" || rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/$(am__dirstamp)
	-test -z "$(top_builddir)/src/lib/libdwarf/$(am__dirstamp)" || rm -f $(top_builddir)/src/lib/libdwarf/$(am__dirstamp)
	-test -z "$(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/$(am__dirstamp)" || rm -f $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/$(am__dirstamp)
	-test -z "$(top_builddir)/src/lib/libdwarfp/$(am__dirstamp)" || rm -f $(top_builddir)/src/lib/libdwarfp/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
		-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Po
	-rm -f $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Po
	-rm -f ./$(DEPDIR)/test_canonical-test_canonical.Po
	-rm -f ./$(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Po
	-rm -f ./$(DEPDIR)/test_dwarfstring-test_dwarfstring.Po
	-rm -f ./$(DEPDIR)/test_dwgetopt-test_getopt.Po
	-rm -f ./$(DEPDIR)/test_errmsglist-test_errmsglist.Po
	-rm -f ./$(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Po
	-rm -f ./$(DEPDIR)/test_getnametest-test_getname.Po
	-rm -f ./$(DEPDIR)/test_helpertree-test_helpertree.Po
	-rm -f ./$(DEPDIR)/test_linkedtopath-test_linkedtopath.Po
	-rm -f ./$(DEPDIR)/test_macrocheck-test_macrocheck.Po
	-rm -f ./$(DEPDIR)/test_makenametest-test_makename.Po
	-rm -f ./$(DEPDIR)/test_regex-test_regex.Po
	-rm -f ./$(DEPDIR)/test_safestrcpy-test_safe_strcpy.Po
	-rm -f ./$(DEPDIR)/test_sanitized-test_sanitized.Po
	-rm -f ./$(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Po
	-rm -f ./$(DEPDIR)/test_testesb-test_esb.Po
	-rm -f ./$(DEPDIR)/test_tied-test_dwarf_tied.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_canonical_append.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_canonical-dd_safe_strcpy.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_dwgetopt-dd_getopt.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_helpertree.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_helpertree-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_macrocheck-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_makename.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_makenametest-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_regex-dd_regex.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sanitized-dd_sanitized.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_sectionbitmaps-dd_section_bitmaps.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_esb.Po
	-rm -f $(top_builddir)/src/bin/dwarfdump/$(DEPDIR)/test_testesb-dd_tsearchbal.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarflebtest-dwarf_leb.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_dwarfstring-dwarf_string.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_errmsglist-dwarf_safe_strcpy.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_extra_flag_strings-dwarf_string.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_getnametest-dwarf_names.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_debuglink.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_safe_strcpy.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_linkedtopath-dwarf_string.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_safestrcpy-dwarf_safe_strcpy.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tied.Po
	-rm -f $(top_builddir)/src/lib/libdwarf/$(DEPDIR)/test_tied-dwarf_tsearchhash.Po
	-rm -f $(top_builddir)/src/lib/libdwarfp/$(DEPDIR)/test_extra_flag_strings-dwarf_pro_log_extra_flag_strings.Po
	-rm -f ./$(DEPDIR)/test_canonical-test_canonical.Po
	-rm -f ./$(DEPDIR)/test_dwarflebtest-test_dwarf_leb.Po
	-rm -f ./$(DEPDIR)/test_dwarfstring-test_dwarfstring.Po
	-rm -f ./$(DEPDIR)/test_dwgetopt-test_getopt.Po
	-rm -f ./$(DEPDIR)/test_errmsglist-test_errmsglist.Po
	-rm -f ./$(DEPDIR)/test_extra_flag_strings-test_extra_flag_strings.Po
	-rm -f ./$(DEPDIR)/test_getnametest-test_getname.Po
	-rm -f ./$(DEPDIR)/test_helpertree-test_helpertree.Po
	-rm -f ./$(DEPDIR)/test_linkedtopath-test_linkedtopath.Po
	-rm -f ./$(DEPDIR)/test_macrocheck-test_macrocheck.Po
	-rm -f ./$(DEPDIR)/test_makenametest-test_makename.Po
	-rm -f ./$(DEPDIR)/test_regex-test_regex.Po
	-rm -f ./$(DEPDIR)/test_safestrcpy-test_safe_strcpy.Po
	-rm -f ./$(DEPDIR)/test_sanitized-test_sanitized.Po
	-rm -f ./$(DEPDIR)/test_sectionbitmaps-test_section_bitmaps.Po
	-rm -f ./$(DEPDIR)/test_testesb-test_esb.Po
	-rm -f ./$(DEPDIR)/test_tied-test_dwarf_tied.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-local cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


clean-local:
	rm -f junk.*
	rm -f dwarfdump.conf

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
